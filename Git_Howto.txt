git init
git --help
git <befehl> -help
git config --global user.name "username"
git config --global user.email "email"
git config --global core.editor gedit
git config --global diff.tool meld
git config --global --add difftool.prompt false
git config --list
git config --help
git help config
git status
git branch
git branch -b "name_of _new_branch"
git add <file>
git add -A
git add .
git commit -m "text commit"
git commit -a -m "direct commit w/o staging"
git log
git log --pretty=oneline
git log --pretty=oneline --graph
git clone <url> <where to clone>
git remote -v
git branch -a
git diff
git status
git add -A
git pull origin master
git push origin master
git branch <new branch>
git checkout <new branch>
git push -u origin <new branch>
git branch -a
git checkout master
git pull origin master
git branch --merged
git merge <file>
git push origin master
# inside from master branch:
git merge newbranch 
# upload to remote master
git push origin master
git commit --amend -m "new message"
git checkout <branch>
git cherry-pick <hashcode>
git log
git reset --soft|mixed|--hard <hashcode>
git status
# -- hard reset only tracked files
# delete untracked files:
git clean -df
# even after --hard reset possible:
git reflog # pick -> hashcode
git checkout <hashcode>

# remote aktualisieren
git push <remote-name> <branch-name>
git push origin master

# upstream mit u parameter setzen:
git push -u origin master	# lokaler master ist mit remote master automatisch verkn√ºpft
git push	

git clone <remote-url> .
git pull origin master
git pull 	# mit gesetztem master 

# git pull macht 2 Sachen:
git fetch 	
git merge

git remote add origin https://github.com/squawk7x/Python.git
git remote 
git remote -v
git push -u origin master












